name: Backend Integration (CI)

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

env:
  PYTHON_VERSION: "3.10"
  AWS_REGION: "us-east-1"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python ${{env.PYTHON_VERSION}}
        uses: actions/setup-python@v4
        with:
          python-version: ${{env.PYTHON_VERSION}}
          cache: "pipenv"

      - name: Install pipenv
        run: pip install pipenv

      - name: Install dependencies
        run: cd starter/backend && pipenv install --dev
      - name: Run linter
        run: cd starter/backend && pipenv run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python ${{env.PYTHON_VERSION}}
        uses: actions/setup-python@v4
        with:
          python-version: ${{env.PYTHON_VERSION}}
          cache: "pipenv"

      - name: Install pipenv
        run: pip install pipenv

      - name: Install dependencies
        run: cd starter/backend && pipenv install --dev

      - name: Run linter
        run: cd starter/backend && pipenv run test

  build:
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python ${{env.PYTHON_VERSION}}
        uses: actions/setup-python@v4
        with:
          python-version: ${{env.PYTHON_VERSION}}
          cache: "pipenv"

      - name: Install pipenv
        run: pip install pipenv

      - name: Install dependencies
        run: cd starter/backend && pipenv install --dev
      - name: Run linter
        run: cd starter/backend && pipenv run test

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: backend
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd starter/backend
          docker build --tag=$REGISTRY/$REPOSITORY:$IMAGE_TAG .